<?xml version="1.0" encoding="UTF-8"?>
<document>
    <properties>
        <title>Plugin gru</title>
    </properties>
    <body>
        <section name="Plugin gru">
            <!--
            <p>
                <img src="images/gru.png" />
            </p>
            -->
            <subsection name="Introduction">
                <p>
                Ce plugin permet de voir toutes les demandes d'un usager dans la même page et de les gérer.
                </p>
            </subsection>
            <subsection name="Cryptage des objets Customer">
                <p>
                Le plugin peut utiliser des objets <code>Customer</code> ayant leurs identifiants cryptés. Ce mécanisme permet d'avoir un identifiant spécifique par fournisseur de services. Par conséquent, l'identifiant n'est pas partagé.
                </p>
                <p>
                Pour utiliser le cryptage, le site doit contenir une classe implémentant l'interface <code>fr.paris.lutece.plugins.grubusiness.service.encryption.ICustomerEncryptionService</code> de la librairie <code>gru-library-grubusiness</code>.
                Par exemple, ajoutez le plugin <code>gru-plugin-grukeydiversification</code> dans le <code>pom.xml</code> du site. The cryptage est alors activé.
                </p>
            </subsection>
            <subsection name="Configuration">
                <p><strong>Le DAO pour les usagers</strong></p>
                <p>
                Par défaut, le plugin utilise un bouchon pour la recherche d'usager. La recherche retourne tout le temps un message disant qu'aucun usager n'a été trouvé.
                Pour utiliser un mécanisme de recherche correct, le bean <code>gru.customerService</code> défini dans le contexte Spring doit utiliser une implémentation concrète de <code>fr.paris.lutece.plugins.grubusiness.business.customer.ICustomerDAO</code>
                de la librairie <code>gru-library-grubusiness</code>.
                </p>
                <p>
                Les implémentations connues sont les suivantes :
                <ul>
                    <li>
                        <code>fr.paris.lutece.plugins.gruindexing.business.lucene.LuceneCustomerDAO</code> du plugin <code>gru-plugin-gru-indexing</code>.
                        Les usagers sont retrouvés à partir d'un index Lucene.
                    </li>
                    <li>
                        <code>fr.paris.lutece.plugins.gruindexing.business.elasticsearch.ElasticSearchCustomerDAO</code> du plugin <code>gru-plugin-gru-indexing</code>.
                        Les usagers sont retrouvés à partir d'un serveur ElasticSearch.
                    </li>
                </ul>
                </p>
                <p><strong>Le DAO pour les demandes</strong></p>
                <p>
                Par défaut, le plugin utilise un bouchon pour retrouver les demandes. L'usager n'a aucune demande.
                Pour utiliser un mécanisme de recherche correct, le bean <code>gru.demandService</code> défini dans le contexte Spring doit utiliser une implémentation concrète de <code>fr.paris.lutece.plugins.grubusiness.business.demand.IDemandDAO</code>
                de la librairie <code>gru-library-grubusiness</code>.
                </p>
                <p>
                Les implémentations connues sont les suivantes :
                <ul>
                    <li>
                        <code>fr.paris.lutece.plugins.grustoragedb.business.DemandDAO</code> du plugin <code>gru-plugin-grustoragedb</code>.
                        Les demandes sont retrouvées à partir de la base de données.
                    </li>
                </ul>
                </p>
                <p><strong>Le DAO pour les notifications</strong></p>
                <p>
                Par défaut, le plugin utilise un bouchon pour retrouver les notifications. L'usager n'a aucune notification.
                Pour utiliser un mécanisme de recherche correct, le bean <code>gru.demandService</code> défini dans le contexte Spring doit utiliser une implémentation concrète de <code>fr.paris.lutece.plugins.grubusiness.business.notification.INotificationDAO</code>
                de la librairie <code>gru-library-grubusiness</code>.
                </p>
                <p>
                Les implémentations connues sont les suivantes :
                <ul>
                    <li>
                        <code>fr.paris.lutece.plugins.grustoragedb.business.NotificationDAO</code> du plugin <code>gru-plugin-grustoragedb</code>.
                        Les notifications sont retrouvées à partir de la base de données.
                    </li>
                </ul>
                </p>
            </subsection>
            <subsection name="Usage">
                <p></p>
            </subsection>
        </section>
    </body>
</document>

